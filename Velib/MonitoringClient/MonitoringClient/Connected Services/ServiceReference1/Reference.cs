//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonitoringClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DoWork", ReplyAction="http://tempuri.org/IService1/DoWorkResponse")]
        string DoWork(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DoWork", ReplyAction="http://tempuri.org/IService1/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getcitys", ReplyAction="http://tempuri.org/IService1/GetcitysResponse")]
        string Getcitys();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getcitys", ReplyAction="http://tempuri.org/IService1/GetcitysResponse")]
        System.Threading.Tasks.Task<string> GetcitysAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOneCity", ReplyAction="http://tempuri.org/IService1/GetOneCityResponse")]
        string GetOneCity(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOneCity", ReplyAction="http://tempuri.org/IService1/GetOneCityResponse")]
        System.Threading.Tasks.Task<string> GetOneCityAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStation", ReplyAction="http://tempuri.org/IService1/GetStationResponse")]
        string GetStation(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStation", ReplyAction="http://tempuri.org/IService1/GetStationResponse")]
        System.Threading.Tasks.Task<string> GetStationAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ClientQuantity", ReplyAction="http://tempuri.org/IService1/ClientQuantityResponse")]
        int ClientQuantity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ClientQuantity", ReplyAction="http://tempuri.org/IService1/ClientQuantityResponse")]
        System.Threading.Tasks.Task<int> ClientQuantityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ClientRequestQuantity", ReplyAction="http://tempuri.org/IService1/ClientRequestQuantityResponse")]
        int ClientRequestQuantity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ClientRequestQuantity", ReplyAction="http://tempuri.org/IService1/ClientRequestQuantityResponse")]
        System.Threading.Tasks.Task<int> ClientRequestQuantityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetRequestDelay", ReplyAction="http://tempuri.org/IService1/SetRequestDelayResponse")]
        void SetRequestDelay(int delay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetRequestDelay", ReplyAction="http://tempuri.org/IService1/SetRequestDelayResponse")]
        System.Threading.Tasks.Task SetRequestDelayAsync(int delay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAverageRequestDelay", ReplyAction="http://tempuri.org/IService1/GetAverageRequestDelayResponse")]
        string GetAverageRequestDelay();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAverageRequestDelay", ReplyAction="http://tempuri.org/IService1/GetAverageRequestDelayResponse")]
        System.Threading.Tasks.Task<string> GetAverageRequestDelayAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MonitoringClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MonitoringClient.ServiceReference1.IService1>, MonitoringClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DoWork(int id) {
            return base.Channel.DoWork(id);
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync(int id) {
            return base.Channel.DoWorkAsync(id);
        }
        
        public string Getcitys() {
            return base.Channel.Getcitys();
        }
        
        public System.Threading.Tasks.Task<string> GetcitysAsync() {
            return base.Channel.GetcitysAsync();
        }
        
        public string GetOneCity(string id) {
            return base.Channel.GetOneCity(id);
        }
        
        public System.Threading.Tasks.Task<string> GetOneCityAsync(string id) {
            return base.Channel.GetOneCityAsync(id);
        }
        
        public string GetStation(string id) {
            return base.Channel.GetStation(id);
        }
        
        public System.Threading.Tasks.Task<string> GetStationAsync(string id) {
            return base.Channel.GetStationAsync(id);
        }
        
        public int ClientQuantity() {
            return base.Channel.ClientQuantity();
        }
        
        public System.Threading.Tasks.Task<int> ClientQuantityAsync() {
            return base.Channel.ClientQuantityAsync();
        }
        
        public int ClientRequestQuantity() {
            return base.Channel.ClientRequestQuantity();
        }
        
        public System.Threading.Tasks.Task<int> ClientRequestQuantityAsync() {
            return base.Channel.ClientRequestQuantityAsync();
        }
        
        public void SetRequestDelay(int delay) {
            base.Channel.SetRequestDelay(delay);
        }
        
        public System.Threading.Tasks.Task SetRequestDelayAsync(int delay) {
            return base.Channel.SetRequestDelayAsync(delay);
        }
        
        public string GetAverageRequestDelay() {
            return base.Channel.GetAverageRequestDelay();
        }
        
        public System.Threading.Tasks.Task<string> GetAverageRequestDelayAsync() {
            return base.Channel.GetAverageRequestDelayAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.wcf", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface wcf {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/wcf/hehe", ReplyAction="http://tempuri.org/wcf/heheResponse")]
        string hehe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/wcf/hehe", ReplyAction="http://tempuri.org/wcf/heheResponse")]
        System.Threading.Tasks.Task<string> heheAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wcfChannel : MonitoringClient.ServiceReference1.wcf, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wcfClient : System.ServiceModel.ClientBase<MonitoringClient.ServiceReference1.wcf>, MonitoringClient.ServiceReference1.wcf {
        
        public wcfClient() {
        }
        
        public wcfClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wcfClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wcfClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wcfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string hehe() {
            return base.Channel.hehe();
        }
        
        public System.Threading.Tasks.Task<string> heheAsync() {
            return base.Channel.heheAsync();
        }
    }
}
